/*! web-app-grunt-starter - v0.0.0-ignored - 2014-11-19
* https://kzf.github.io
* Copyright (c) 2014 Kevin Fray; Licensed  */
(function e(t,s,r){function i(o,p){if(!s[o]){if(!t[o]){var h="function"==typeof require&&require;if(!p&&h)return h(o,!0);if(n)return n(o,!0);var a=Error("Cannot find module '"+o+"'");throw a.code="MODULE_NOT_FOUND",a}var u=s[o]={exports:{}};t[o][0].call(u.exports,function(e){var s=t[o][1][e];return i(s?s:e)},u,u.exports,e,t,s,r)}return s[o].exports}for(var n="function"==typeof require&&require,o=0;r.length>o;o++)i(r[o]);return i})({1:[function(t,e){"use strict";var s=function(t){console.log(t),this.head=t.linkedlist,this.straightLength=-1,this.cycleLength=-1,this.steps=[],this.numKeyframes=0};s.prototype.generate=function(){for(this.keyframe(),this.initialisePointers(),this.keyframe();this.comparePointers();)this.tortoiseStep(),this.hareStep(),this.keyframe();this.keyframe()},s.prototype.initialisePointers=function(){this.hare=this.head,this.tortoise=this.head,this.steps.push({name:"initialisePointers"})},s.prototype.comparePointers=function(){return console.log(this.tortoise===this.head||this.hare!==this.tortoise),this.steps.push({name:"comparePointers"}),this.tortoise===this.head||this.hare!==this.tortoise},s.prototype.hareStep=function(){this.hare=this.hare.next.next,this.steps.push({name:"hareStep"})},s.prototype.tortoiseStep=function(){this.tortoise=this.tortoise.next,this.steps.push({name:"tortoiseStep"})},s.prototype.keyframe=function(){this.numKeyframes++},e.exports=s},{}],2:[function(t,e){"use strict";var s=function(t){this.next=null,this.value=t};s.prototype.append=function(t){var e=new s(t);return this.next=e,e},e.exports=s},{}],3:[function(t,e){"use strict";var s=function(t,e){this.steps=[],this.alg=new t(e);var s=this,r=function(t){return function(){var e=s[t].apply(s.alg,arguments);return s.steps.push({name:t,arguments:arguments}),e}};for(var i in t.prototype)"generate"!==i&&t.prototype.hasOwnProperty(i)&&(this[i]=this.alg[i],this.alg[i]=r(i));this.alg.generate(),this.numKeyframes=this.alg.numKeyframes};e.exports=s},{}],4:[function(t,e){"use strict";var s=function(t,e){this.container=t,this.steppedAlgorithm=e,this.maxSteps=this.steppedAlgorithm.steps.length,this.currentStep=0,this.currentKeyframe=0,this.generatedKeyframes=0,this.maxKeyframes=this.steppedAlgorithm.numKeyframes,this.stepElements=[]};s.prototype.addKeyframe=function(){for(var t=this.currentStep;"keyframe"!==this.steppedAlgorithm.steps[++t].name;)this.addStep(this.currentStep);this.generatedKeyframes++},s.prototype.addStep=function(t){var e=document.createElement("p");return e.className="step ",e.innerHTML=this.steppedAlgorithm.steps[t].name,this.stepElements[t]=e,e},s.prototype.doStep=function(t){this.container.appendChild(this.stepElements[t])},s.prototype.undoStep=function(t){this.container.removeChild(this.stepElements[t])},s.prototype.next=function(){if(this.currentSteps>=this.maxSteps)throw"Asked for next step when algorithm has terminated";for(this.currentKeyframe===this.generatedKeyframes&&this.addKeyframe();"keyframe"!==this.steppedAlgorithm.steps[++this.currentStep].name;)this.doStep(this.currentStep);this.currentKeyframe++},s.prototype.last=function(){if(0===this.currentStep)throw"Asked for last step when algorithm has not started";for(;"keyframe"!==this.steppedAlgorithm.steps[--this.currentStep].name;)this.undoStep(this.currentStep)},e.exports=s},{}],5:[function(t){var e=t("./LinkedList"),s=t("./Steppify"),r=t("./TextView"),i=t("./HareTortoise"),n=function(t,s){var r,i=new e(0),n=i;for(r=1;t>r;r++)i=i.append(r);var o=i;for(r=1;s>r;r++)i=i.append(t+r-1);return i.next=o,n},o=n(3,5),p=new s(i,{linkedlist:o}),h=new r(document.getElementById("right-view"),p),a=$(".current-steps").text(0);console.log(p,"test"),$(".total-steps").text(p.numKeyframes),$("#step_back").on("click",function(){h.last(),a.text(parseInt(a.text())-1)}),$("#step_forward").on("click",function(){h.next(),a.text(parseInt(a.text())+1),console.log("back")})},{"./HareTortoise":1,"./LinkedList":2,"./Steppify":3,"./TextView":4}]},{},[1,2,3,4,5]);